scale = "width",
size = 1) +
ggsignif::geom_signif(comparisons = list(c("SCISSORS", "Seurat"),
c("SCISSORS", "Leiden"),
c("SCISSORS", "DBSCAN"),
c("SCISSORS", "GiniClust3"),
c("SCISSORS", "CellSIUS"),
c("SCISSORS", "K-means"),
c("SCISSORS", "Hierarchical")),
test = "wilcox.test",
step_increase = 0.08,
map_signif_level = TRUE,
vjust = 0.2,
textsize = 3) +
labs(fill = "Clustering Method", y = "Mean Silhouette Score") +
scale_y_continuous(labels = scales::label_number(accuracy = .1),
breaks = seq(round(min(sim_results$sil)), max(sim_results$sil), by = 0.4)) +
scale_fill_paletteer_d("ggsci::nrc_npg") +
theme_classic(base_size = 16)  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9, vjust = 0.95, face = "bold"),
axis.title.x = element_blank(),
panel.grid.major.y = element_line(color = "grey80")) +
guides(fill = guide_legend(override.aes = list(size = 1, color = NULL)))
p3b
p3b <- ggplot(sim_results, aes(x = method, y = sil, fill = method)) +
geom_violin(draw_quantiles = 0.5,
color = "black",
scale = "width",
size = 1) +
ggsignif::geom_signif(comparisons = list(c("SCISSORS", "Seurat"),
c("SCISSORS", "Leiden"),
c("SCISSORS", "DBSCAN"),
c("SCISSORS", "GiniClust3"),
c("SCISSORS", "CellSIUS"),
c("SCISSORS", "K-means"),
c("SCISSORS", "Hierarchical")),
test = "wilcox.test",
step_increase = 0.08,
map_signif_level = TRUE,
vjust = 0.2,
textsize = 3) +
labs(fill = "Clustering Method", y = "Mean Silhouette Score") +
scale_y_continuous(labels = scales::label_number(accuracy = .1),
breaks = seq(round(min(sim_results$sil)), max(sim_results$sil), by = 0.3)) +
scale_fill_paletteer_d("ggsci::nrc_npg") +
theme_classic(base_size = 16)  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9, vjust = 0.95, face = "bold"),
axis.title.x = element_blank(),
panel.grid.major.y = element_line(color = "grey80")) +
guides(fill = guide_legend(override.aes = list(size = 1, color = NULL)))
p3b
p3b <- ggplot(sim_results, aes(x = method, y = sil, fill = method)) +
geom_violin(draw_quantiles = 0.5,
color = "black",
scale = "width",
size = 1) +
ggsignif::geom_signif(comparisons = list(c("SCISSORS", "Seurat"),
c("SCISSORS", "Leiden"),
c("SCISSORS", "DBSCAN"),
c("SCISSORS", "GiniClust3"),
c("SCISSORS", "CellSIUS"),
c("SCISSORS", "K-means"),
c("SCISSORS", "Hierarchical")),
test = "wilcox.test",
step_increase = 0.08,
map_signif_level = TRUE,
vjust = 0.2,
textsize = 3) +
labs(fill = "Clustering Method", y = "Mean Silhouette Score") +
scale_y_continuous(labels = scales::label_number(accuracy = .1),
breaks = seq(round(min(sim_results$sil)), max(sim_results$sil), by = 0.25)) +
scale_fill_paletteer_d("ggsci::nrc_npg") +
theme_classic(base_size = 16)  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9, vjust = 0.95, face = "bold"),
axis.title.x = element_blank(),
panel.grid.major.y = element_line(color = "grey80")) +
guides(fill = guide_legend(override.aes = list(size = 1, color = NULL)))
p3b
max(sim_results$sil)
round(max(sim_results$sil), 1)
p3b <- ggplot(sim_results, aes(x = method, y = sil, fill = method)) +
geom_violin(draw_quantiles = 0.5,
color = "black",
scale = "width",
size = 1) +
ggsignif::geom_signif(comparisons = list(c("SCISSORS", "Seurat"),
c("SCISSORS", "Leiden"),
c("SCISSORS", "DBSCAN"),
c("SCISSORS", "GiniClust3"),
c("SCISSORS", "CellSIUS"),
c("SCISSORS", "K-means"),
c("SCISSORS", "Hierarchical")),
test = "wilcox.test",
step_increase = 0.08,
map_signif_level = TRUE,
vjust = 0.2,
textsize = 3) +
labs(fill = "Clustering Method", y = "Mean Silhouette Score") +
scale_y_continuous(labels = scales::label_number(accuracy = .1),
breaks = seq(round(min(sim_results$sil)), round(max(sim_results$sil), 1), by = 0.4)) +
scale_fill_paletteer_d("ggsci::nrc_npg") +
theme_classic(base_size = 16)  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9, vjust = 0.95, face = "bold"),
axis.title.x = element_blank(),
panel.grid.major.y = element_line(color = "grey80")) +
guides(fill = guide_legend(override.aes = list(size = 1, color = NULL)))
p3b
round(max(sim_results$sil), 1)
p3b <- ggplot(sim_results, aes(x = method, y = sil, fill = method)) +
geom_violin(draw_quantiles = 0.5,
color = "black",
scale = "width",
size = 1) +
ggsignif::geom_signif(comparisons = list(c("SCISSORS", "Seurat"),
c("SCISSORS", "Leiden"),
c("SCISSORS", "DBSCAN"),
c("SCISSORS", "GiniClust3"),
c("SCISSORS", "CellSIUS"),
c("SCISSORS", "K-means"),
c("SCISSORS", "Hierarchical")),
test = "wilcox.test",
step_increase = 0.08,
map_signif_level = TRUE,
vjust = 0.2,
textsize = 3) +
labs(fill = "Clustering Method", y = "Mean Silhouette Score") +
scale_y_continuous(labels = scales::label_number(accuracy = .1),
breaks = seq(0, round(max(sim_results$sil), 1), by = 0.4)) +
scale_fill_paletteer_d("ggsci::nrc_npg") +
theme_classic(base_size = 16)  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9, vjust = 0.95, face = "bold"),
axis.title.x = element_blank(),
panel.grid.major.y = element_line(color = "grey80")) +
guides(fill = guide_legend(override.aes = list(size = 1, color = NULL)))
p3b
p3b <- ggplot(sim_results, aes(x = method, y = sil, fill = method)) +
geom_violin(draw_quantiles = 0.5,
color = "black",
scale = "width",
size = 1) +
ggsignif::geom_signif(comparisons = list(c("SCISSORS", "Seurat"),
c("SCISSORS", "Leiden"),
c("SCISSORS", "DBSCAN"),
c("SCISSORS", "GiniClust3"),
c("SCISSORS", "CellSIUS"),
c("SCISSORS", "K-means"),
c("SCISSORS", "Hierarchical")),
test = "wilcox.test",
step_increase = 0.08,
map_signif_level = TRUE,
vjust = 0.2,
textsize = 3) +
labs(fill = "Clustering Method", y = "Mean Silhouette Score") +
scale_y_continuous(labels = scales::label_number(accuracy = .1),
breaks = seq(round(min(sim_results$sil, 1)), round(max(sim_results$sil), 1), by = 0.4)) +
scale_fill_paletteer_d("ggsci::nrc_npg") +
theme_classic(base_size = 16)  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9, vjust = 0.95, face = "bold"),
axis.title.x = element_blank(),
panel.grid.major.y = element_line(color = "grey80")) +
guides(fill = guide_legend(override.aes = list(size = 1, color = NULL)))
p3b
p3b <- ggplot(sim_results, aes(x = method, y = sil, fill = method)) +
geom_violin(draw_quantiles = 0.5,
color = "black",
scale = "width",
size = 1) +
ggsignif::geom_signif(comparisons = list(c("SCISSORS", "Seurat"),
c("SCISSORS", "Leiden"),
c("SCISSORS", "DBSCAN"),
c("SCISSORS", "GiniClust3"),
c("SCISSORS", "CellSIUS"),
c("SCISSORS", "K-means"),
c("SCISSORS", "Hierarchical")),
test = "wilcox.test",
step_increase = 0.08,
map_signif_level = TRUE,
vjust = 0.2,
textsize = 3) +
labs(fill = "Clustering Method", y = "Mean Silhouette Score") +
scale_y_continuous(labels = scales::label_number(accuracy = .1),
breaks = seq(round(min(sim_results$sil, 1)), round(max(sim_results$sil), 1), by = 0.3)) +
scale_fill_paletteer_d("ggsci::nrc_npg") +
theme_classic(base_size = 16)  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9, vjust = 0.95, face = "bold"),
axis.title.x = element_blank(),
panel.grid.major.y = element_line(color = "grey80")) +
guides(fill = guide_legend(override.aes = list(size = 1, color = NULL)))
p3b
p3a <- ggplot(sim_results, aes(x = method, y = sil, fill = method)) +
facet_wrap(~reference) +
geom_violin(draw_quantiles = 0.5,
color = "black",
scale = "width",
size = 1) +
ggsignif::geom_signif(comparisons = list(c("SCISSORS", "Seurat"),
c("SCISSORS", "Leiden"),
c("SCISSORS", "DBSCAN"),
c("SCISSORS", "GiniClust3"),
c("SCISSORS", "CellSIUS"),
c("SCISSORS", "K-means"),
c("SCISSORS", "Hierarchical")),
test = "wilcox.test",
step_increase = 0.08,
map_signif_level = TRUE,
vjust = 0.2,
textsize = 3) +
labs(fill = "Clustering Method", y = "Mean Silhouette Score") +
scale_y_continuous(labels = scales::label_number(accuracy = .1),
breaks = seq(round(min(sim_results$sil, 1)), round(max(sim_results$sil), 1), by = 0.3)) +
scale_fill_paletteer_d("ggsci::nrc_npg") +
theme_classic(base_size = 16)  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9, vjust = 0.95, face = "bold"),
axis.title.x = element_blank(),
panel.grid.major.y = element_line(color = "grey80")) +
guides(fill = guide_legend(override.aes = list(size = 1, color = NULL)))
p3a
p7 <- sim_results %>%
with_groups(c(reference, method),
filter,
sil > median(sil)) %>%
ggplot(aes(x = method, y = sil, fill = method)) +
facet_wrap(~reference) +
geom_violin(draw_quantiles = 0.5,
color = "black",
scale = "width",
size = 1) +
ggsignif::geom_signif(comparisons = list(c("SCISSORS", "Seurat"),
c("SCISSORS", "Leiden"),
c("SCISSORS", "DBSCAN"),
c("SCISSORS", "GiniClust3"),
c("SCISSORS", "CellSIUS"),
c("SCISSORS", "K-means"),
c("SCISSORS", "Hierarchical")),
test = "wilcox.test",
step_increase = 0.08,
map_signif_level = TRUE,
vjust = 0.2,
textsize = 3) +
labs(fill = "Clustering Method",
y = "Silhouette Score",
caption = "Top 50% of clustering runs") +
scale_y_continuous(labels = scales::label_number(accuracy = .1),
breaks = seq(0, max(sim_results$sil), by = 0.25)) +
scale_fill_paletteer_d("ggsci::nrc_npg") +
theme_classic(base_size = 16)  +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9, vjust = 0.95, face = "bold"),
axis.title.x = element_blank(),
panel.grid.major.y = element_line(color = "grey80"),
plot.caption = element_text(face = "italic")) +
guides(fill = guide_legend(override.aes = list(size = 1, color = NULL)))
p7
p8 <- DimPlot(sim_panc_ncell1000_nclust7,
reduction = "tsne",
group.by = "cellPopulation2",
cols = alpha(paletteer_d("ggsci::category10_d3"), 0.75),
pt.size = 1) +
labs(x = "t-SNE 1",
y = "t-SNE 2",
color = "True\nLabel") +
theme_classic(base_size = 14) +
theme(axis.ticks = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
legend.title = element_text(face = "bold")) +
guides(color = guide_legend(override.aes = list(size = 3, alpha = 1)))
p8
p8 <- DimPlot(sim_panc_ncell1000_nclust7,
reduction = "tsne",
group.by = "cellPopulation2",
cols = alpha(paletteer_d("ggsci::category10_d3"), 0.75),
pt.size = 1) +
labs(x = "t-SNE 1",
y = "t-SNE 2",
color = "True\nLabel") +
theme_classic(base_size = 14) +
theme(axis.ticks = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
legend.title = element_text(face = "bold")) +
guides(color = guide_legend(override.aes = list(size = 3, alpha = 1)))
p8
p8
p8
clust_comp <- data.frame(SCISSORS = SCISSORS_clusts,
Seurat = Louvain_clusts,
Leiden = Leiden_clusts,
Kmeans = kmeans_clusts,
Hierarchical = hclust_clusts,
DBSCAN = dbscan_clusts,
GiniClust3 = giniclust3_clusts,
CellSIUS = cellsius_clusts,
tSNE_1 = Embeddings(sim_panc_ncell1000_nclust7, "tsne")[, 1],
tSNE_2 = Embeddings(sim_panc_ncell1000_nclust7, "tsne")[, 2]) %>%
tidyr::pivot_longer(!contains("tSNE"),
names_to = "method",
values_to = "cluster") %>%
mutate(method = factor(method,
levels = c("Kmeans",
"Hierarchical",
"DBSCAN",
"Leiden",
"GiniClust3",
"CellSIUS",
"Seurat",
"SCISSORS"),
labels = c("K-means",
"Hierarchical",
"DBSCAN",
"Leiden",
"GiniClust3",
"CellSIUS",
"Seurat",
"SCISSORS")),
across(!contains("tSNE"), as.factor))
p9 <- ggplot(clust_comp, aes(x = tSNE_1, y = tSNE_2, color = cluster)) +
facet_wrap(~method, ncol = 4) +
geom_point(size = 0.75, alpha = 0.75) +
scale_color_paletteer_d("ggsci::category10_d3") +
labs(x = "t-SNE 1",
y = "t-SNE 2",
color = "Estimated\nCluster") +
theme_classic(base_size = 14) +
theme(axis.ticks = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
legend.title = element_text(face = "bold")) +
guides(color = guide_legend(override.aes = list(size = 3, alpha = 1)))
p9
p9
all(is.na(cellsius_res))
table(seu.obj$seurat_clusters)
seu.obj <- FindClusters(sim_panc_ncell1000_nclust7,
resolution = 0.1,
algorithm = 1,
verbose = FALSE,
random.seed = 312)
cellsius_res <- CellSIUS::CellSIUS(mat.norm = as.matrix(sim_panc_ncell1000_nclust7@assays$RNA@data),
min_fc = 2,
group_id = as.factor(sim_panc_ncell1000_nclust7$seurat_clusters),
mcl_path = "/nas/longleaf/rhel8/apps/mcl/14-137/bin/mcl")
if (all(is.na(cellsius_res))) {
cellsius_clust <- sim_panc_ncell1000_nclust7$seurat_clusters
} else {
cellsius_clusts <- CellSIUS::CellSIUS_final_cluster_assignment(cellsius_res, group_id = sim_panc_ncell1000_nclust7$seurat_clusters)
cellsius_clusts <- as.integer(as.factor(cellsius_clusts))
}
clust_comp <- data.frame(SCISSORS = SCISSORS_clusts,
Seurat = Louvain_clusts,
Leiden = Leiden_clusts,
Kmeans = kmeans_clusts,
Hierarchical = hclust_clusts,
DBSCAN = dbscan_clusts,
GiniClust3 = giniclust3_clusts,
CellSIUS = cellsius_clusts,
tSNE_1 = Embeddings(sim_panc_ncell1000_nclust7, "tsne")[, 1],
tSNE_2 = Embeddings(sim_panc_ncell1000_nclust7, "tsne")[, 2]) %>%
tidyr::pivot_longer(!contains("tSNE"),
names_to = "method",
values_to = "cluster") %>%
mutate(method = factor(method,
levels = c("Kmeans",
"Hierarchical",
"DBSCAN",
"Leiden",
"GiniClust3",
"CellSIUS",
"Seurat",
"SCISSORS"),
labels = c("K-means",
"Hierarchical",
"DBSCAN",
"Leiden",
"GiniClust3",
"CellSIUS",
"Seurat",
"SCISSORS")),
across(!contains("tSNE"), as.factor))
p9 <- ggplot(clust_comp, aes(x = tSNE_1, y = tSNE_2, color = cluster)) +
facet_wrap(~method, ncol = 4) +
geom_point(size = 0.75, alpha = 0.75) +
scale_color_paletteer_d("ggsci::category10_d3") +
labs(x = "t-SNE 1",
y = "t-SNE 2",
color = "Estimated\nCluster") +
theme_classic(base_size = 14) +
theme(axis.ticks = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
legend.title = element_text(face = "bold")) +
guides(color = guide_legend(override.aes = list(size = 3, alpha = 1)))
p9
if (all(is.na(cellsius_res))) {
cellsius_clust <- seu.obj$seurat_clusters
} else {
cellsius_clusts <- CellSIUS::CellSIUS_final_cluster_assignment(cellsius_res, group_id = sim_panc_ncell1000_nclust7$seurat_clusters)
cellsius_clusts <- as.integer(as.factor(cellsius_clusts))
}
clust_comp <- data.frame(SCISSORS = SCISSORS_clusts,
Seurat = Louvain_clusts,
Leiden = Leiden_clusts,
Kmeans = kmeans_clusts,
Hierarchical = hclust_clusts,
DBSCAN = dbscan_clusts,
GiniClust3 = giniclust3_clusts,
CellSIUS = cellsius_clusts,
tSNE_1 = Embeddings(sim_panc_ncell1000_nclust7, "tsne")[, 1],
tSNE_2 = Embeddings(sim_panc_ncell1000_nclust7, "tsne")[, 2]) %>%
tidyr::pivot_longer(!contains("tSNE"),
names_to = "method",
values_to = "cluster") %>%
mutate(method = factor(method,
levels = c("Kmeans",
"Hierarchical",
"DBSCAN",
"Leiden",
"GiniClust3",
"CellSIUS",
"Seurat",
"SCISSORS"),
labels = c("K-means",
"Hierarchical",
"DBSCAN",
"Leiden",
"GiniClust3",
"CellSIUS",
"Seurat",
"SCISSORS")),
across(!contains("tSNE"), as.factor))
p9 <- ggplot(clust_comp, aes(x = tSNE_1, y = tSNE_2, color = cluster)) +
facet_wrap(~method, ncol = 4) +
geom_point(size = 0.75, alpha = 0.75) +
scale_color_paletteer_d("ggsci::category10_d3") +
labs(x = "t-SNE 1",
y = "t-SNE 2",
color = "Estimated\nCluster") +
theme_classic(base_size = 14) +
theme(axis.ticks = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
legend.title = element_text(face = "bold")) +
guides(color = guide_legend(override.aes = list(size = 3, alpha = 1)))
p9
table(seu.obj$seurat_clusters)
tar_load(sim_panc_ncell1000_nclust7, store = "../_targets/")
sim_panc_ncell1000_nclust7@meta.data$cellPopulation2 <- as.integer(sim_panc_ncell1000_nclust7@meta.data$cellPopulation) - 1L
p8 <- DimPlot(sim_panc_ncell1000_nclust7,
reduction = "tsne",
group.by = "cellPopulation2",
cols = alpha(paletteer_d("ggsci::category10_d3"), 0.75),
pt.size = 1) +
labs(x = "t-SNE 1",
y = "t-SNE 2",
color = "True\nLabel") +
theme_classic(base_size = 14) +
theme(axis.ticks = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
legend.title = element_text(face = "bold")) +
guides(color = guide_legend(override.aes = list(size = 3, alpha = 1)))
p8
seu <- FindClusters(sim_panc_ncell1000_nclust7,
resolution = 0.1,
algorithm = 1,
random.seed = 312,
verbose = FALSE)
SCISSORS_clusts <- SCISSORS::ReclusterCells(seurat.object = seu,
auto = TRUE,
use.parallel = FALSE,
resolution.vals = seq(0.1, 0.7, by = c(0.1)),
k.vals = c(10, 25, 40, 60),
merge.clusters = FALSE,
use.sct = FALSE,
n.HVG = 2000,
n.PC = 20,
cutoff.score = 0.25,
random.seed = 312)
seu_new <- SCISSORS::IntegrateSubclusters(original.object = seu, reclust.results = SCISSORS_clusts)
SCISSORS_clusts <- as.integer(seu_new$seurat_clusters) - 1L
Louvain_clusts <- FindNeighbors(sim_panc_ncell1000_nclust7,
reduction = "pca",
dims = 1:20,
nn.method = "annoy",
annoy.metric = "cosine",
verbose = FALSE) %>%
FindClusters(resolution = 0.5,
algorithm = 1,
random.seed = 312,
verbose = FALSE)
Louvain_clusts <- as.integer(Louvain_clusts$seurat_clusters) - 1L
reticulate::use_virtualenv("/nas/longleaf/home/jrleary/Python", required = TRUE)
Leiden_clusts <- FindClusters(sim_panc_ncell1000_nclust7,
resolution = 0.5,
algorithm = 4,
random.seed = 312,
verbose = FALSE)$seurat_clusters
Leiden_clusts <- as.integer(Leiden_clusts) - 1L
kmeans_clusts <- kmeans(Embeddings(sim_panc_ncell1000_nclust7, "pca")[, 1:20],
centers = 7,
nstart = 5,
algorithm = "Hartigan-Wong")$cluster
kmeans_clusts <- as.integer(kmeans_clusts) - 1L
hclust_tree <- hclust(SCISSORS::CosineDist(Embeddings(sim_panc_ncell1000_nclust7, "pca")[, 1:20]), method = "ward.D2")
hclust_clusts <- as.integer(cutree(hclust_tree, k = 7)) - 1L
dbscan::kNNdistplot(Embeddings(sim_panc_ncell1000_nclust7, "pca")[, 1:20], k = 10)
abline(h = 8, col = "firebrick", lty = "dashed")
dbscan_clusts <- dbscan::dbscan(scale(sim_panc_ncell1000_nclust7@reductions$pca@cell.embeddings[, 1:20], scale = FALSE),
eps = 8,
minPts = 5,
borderPoints = TRUE)$cluster
count_mat <- as.matrix(sim_panc_ncell1000_nclust7@assays$RNA@counts)
reticulate::repl_python()
